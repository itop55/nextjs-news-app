{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport jwtDecode from \"jwt-decode\";\nexport var AuthToken = /*#__PURE__*/function () {\n  function AuthToken(token) {\n    _classCallCheck(this, AuthToken);\n\n    this.token = token;\n\n    _defineProperty(this, \"decodedToken\", void 0);\n\n    this.decodedToken = {\n      email: \"\",\n      exp: 0\n    };\n\n    try {\n      if (token) this.decodedToken = jwtDecode(token);\n    } catch (e) {}\n  }\n\n  _createClass(AuthToken, [{\n    key: \"decodeToken\",\n    get: function get() {\n      return this.decodedToken;\n    }\n  }, {\n    key: \"expiresAt\",\n    get: function get() {\n      return new Date(this.decodedToken.exp * 1000);\n    }\n  }, {\n    key: \"isExpired\",\n    get: function get() {\n      return new Date() > this.expiresAt;\n    }\n  }, {\n    key: \"isAuthenticated\",\n    get: function get() {\n      return !this.isExpired;\n    }\n  }, {\n    key: \"authorizationString\",\n    get: function get() {\n      return \"Bearer \".concat(this.token);\n    }\n  }]);\n\n  return AuthToken;\n}();","map":{"version":3,"sources":["C:/Users/CHOROK/projects/news-app/services/auth_token.ts"],"names":["jwtDecode","AuthToken","token","decodedToken","email","exp","e","Date","expiresAt","isExpired"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAOA,WAAaC,SAAb;AAGE,qBAAqBC,KAArB,EAAqC;AAAA;;AAAA,SAAhBA,KAAgB,GAAhBA,KAAgB;;AAAA;;AACnC,SAAKC,YAAL,GAAoB;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KAApB;;AACA,QAAI;AACF,UAAIH,KAAJ,EAAW,KAAKC,YAAL,GAAoBH,SAAS,CAACE,KAAD,CAA7B;AACZ,KAFD,CAEE,OAAOI,CAAP,EAAU,CAAE;AACf;;AARH;AAAA;AAAA,wBAUyB;AACrB,aAAO,KAAKH,YAAZ;AACD;AAZH;AAAA;AAAA,wBAawB;AACpB,aAAO,IAAII,IAAJ,CAAS,KAAKJ,YAAL,CAAkBE,GAAlB,GAAwB,IAAjC,CAAP;AACD;AAfH;AAAA;AAAA,wBAiB2B;AACvB,aAAO,IAAIE,IAAJ,KAAa,KAAKC,SAAzB;AACD;AAnBH;AAAA;AAAA,wBAqBiC;AAC7B,aAAO,CAAC,KAAKC,SAAb;AACD;AAvBH;AAAA;AAAA,wBAyB4B;AACxB,8BAAiB,KAAKP,KAAtB;AACD;AA3BH;;AAAA;AAAA","sourcesContent":["import jwtDecode from \"jwt-decode\";\n\nexport type DecodedToken = {\n  readonly email: string;\n  readonly exp: number;\n}\n\nexport class AuthToken {\n  readonly decodedToken: DecodedToken;\n\n  constructor(readonly token?: string) {\n    this.decodedToken = { email: \"\", exp: 0 };\n    try {\n      if (token) this.decodedToken = jwtDecode(token);\n    } catch (e) {}\n  }\n\n  get decodeToken(): any {\n    return this.decodedToken\n  }\n  get expiresAt(): Date {\n    return new Date(this.decodedToken.exp * 1000);\n  }\n\n  get isExpired(): boolean {\n    return new Date() > this.expiresAt;\n  }\n\n  get isAuthenticated(): boolean {\n    return !this.isExpired;\n  }\n\n  get authorizationString() {\n    return `Bearer ${this.token}`;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}