{"ast":null,"code":"import Cookie from \"js-cookie\";\nimport Router from \"next/router\";\nimport { catchAxiosError } from \"./error\";\nimport { post } from \"./rest_service\";\nexport const COOKIES = {\n  authToken: \"myApp.authToken\"\n};\nexport async function login(inputs) {\n  const data = new URLSearchParams(inputs);\n  const res = await post(\"/api/login\", data).catch(catchAxiosError);\n\n  if (res.error) {\n    return res.error;\n  } else if (!res.data || !res.data.token) {\n    return \"Something went wrong!\";\n  }\n\n  const {\n    token\n  } = res.data; // store the token into cookies\n\n  Cookie.set(COOKIES.authToken, token);\n  await Router.push(\"/profile\");\n}","map":{"version":3,"sources":["C:/Users/CHOROK/projects/news-app/services/login_service.ts"],"names":["Cookie","Router","catchAxiosError","post","COOKIES","authToken","login","inputs","data","URLSearchParams","res","catch","error","token","set","push"],"mappings":"AACA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,IAAT,QAAqB,gBAArB;AAEA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,SAAS,EAAE;AADU,CAAhB;AAIP,OAAO,eAAeC,KAAf,CAAqBC,MAArB,EAAkE;AACvE,QAAMC,IAAI,GAAG,IAAIC,eAAJ,CAAoBF,MAApB,CAAb;AACA,QAAMG,GAAQ,GAAG,MAAMP,IAAI,CAAC,YAAD,EAAeK,IAAf,CAAJ,CAAyBG,KAAzB,CAA+BT,eAA/B,CAAvB;;AACA,MAAIQ,GAAG,CAACE,KAAR,EAAe;AACb,WAAOF,GAAG,CAACE,KAAX;AACD,GAFD,MAEO,IAAI,CAACF,GAAG,CAACF,IAAL,IAAa,CAACE,GAAG,CAACF,IAAJ,CAASK,KAA3B,EAAkC;AACvC,WAAO,uBAAP;AACD;;AACD,QAAM;AAAEA,IAAAA;AAAF,MAAYH,GAAG,CAACF,IAAtB,CARuE,CAUvE;;AACAR,EAAAA,MAAM,CAACc,GAAP,CAAWV,OAAO,CAACC,SAAnB,EAA8BQ,KAA9B;AACA,QAAMZ,MAAM,CAACc,IAAP,CAAY,UAAZ,CAAN;AACD","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\nimport Cookie from \"js-cookie\";\nimport Router from \"next/router\";\nimport { LoginInputs } from \"../pages/login\";\nimport { catchAxiosError } from \"./error\";\nimport { post } from \"./rest_service\";\n\nexport const COOKIES = {\n  authToken: \"myApp.authToken\"\n};\n\nexport async function login(inputs: LoginInputs): Promise<string | void> {\n  const data = new URLSearchParams(inputs);\n  const res: any = await post(\"/api/login\", data).catch(catchAxiosError);\n  if (res.error) {\n    return res.error;\n  } else if (!res.data || !res.data.token) {\n    return \"Something went wrong!\";\n  }\n  const { token } = res.data;\n\n  // store the token into cookies\n  Cookie.set(COOKIES.authToken, token);\n  await Router.push(\"/profile\");\n}\n"]},"metadata":{},"sourceType":"module"}