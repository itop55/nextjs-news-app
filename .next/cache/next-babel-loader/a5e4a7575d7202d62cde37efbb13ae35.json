{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHOROK\\\\projects\\\\news-app\\\\pages\\\\profile.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { privateRoute } from \"../components/private_route\";\nimport Cookie from \"js-cookie\";\nimport Router from \"next/router\";\nimport { COOKIES } from \"../services/login_service\";\nimport { get } from \"../services/rest_service\";\nimport Layout from \"../components/layout\";\n\nfunction Page(props) {\n  const logout = async () => {\n    Cookie.remove(COOKIES.authToken);\n    await Router.push(\"/login\");\n  };\n\n  const {\n    email,\n    name,\n    avatarUrl,\n    role\n  } = props.auth.userData;\n  return __jsx(Layout, {\n    title: \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(\"section\", {\n    className: \"user-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"user-profile__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Profile info\"), __jsx(\"button\", {\n    className: \"btn-secondary\",\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Logout\")), __jsx(\"div\", {\n    className: \"user-profile__vn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"user-profile__avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: avatarUrl,\n    alt: \"user avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    className: \"user-profile__avatar-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, role), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, name))), __jsx(\"div\", {\n    className: \"user-profile__desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 43\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }))))));\n}\n\nPage.getInitialProps = async ({\n  auth\n}) => {\n  const res = await get(\"/api/restricted\", {\n    headers: {\n      Authorization: auth.authorizationString\n    }\n  });\n  let message = \"Something unexpected happened!\";\n\n  if (res.error) {\n    message = res.error;\n  } else if (res.data && res.data.message) {\n    message = res.data.message;\n  }\n\n  return {\n    message,\n    auth\n  };\n};\n\nexport default privateRoute(Page);","map":{"version":3,"sources":["C:/Users/CHOROK/projects/news-app/pages/profile.tsx"],"names":["privateRoute","Cookie","Router","COOKIES","get","Layout","Page","props","logout","remove","authToken","push","email","name","avatarUrl","role","auth","userData","getInitialProps","res","headers","Authorization","authorizationString","message","error","data"],"mappings":"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","sourcesContent":["import { AuthProps, privateRoute } from \"../components/private_route\"\nimport Cookie from \"js-cookie\"\nimport Router from \"next/router\"\nimport { COOKIES } from \"../services/login_service\"\nimport { get } from \"../services/rest_service\"\nimport Layout from \"../components/layout\"\n\ntype Props = AuthProps & {\n  message: string\n}\n\nfunction Page(props: Props) {\n  const logout = async () => {\n    Cookie.remove(COOKIES.authToken);\n    await Router.push(\"/login\");\n  };\n  const {email, name, avatarUrl, role} = props.auth.userData\n\n  return (\n      <Layout title=\"Профиль пользователя\">\n        <section className=\"user-profile\">\n          <div className=\"user-profile__title\">\n            <h1>Profile info</h1>\n            <button className=\"btn-secondary\" onClick={logout}>Logout</button>\n          </div>\n          <div className=\"user-profile__vn\">\n            <div className=\"user-profile__avatar\">\n              <img src={avatarUrl} alt=\"user avatar\"/>\n              <div className=\"user-profile__avatar-desc\">\n                <h6>{role}</h6>\n                <h3>{name}</h3>\n              </div>\n            </div>\n            <div className=\"user-profile__desc\">\n              <div className=\"form-group\"><label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" name=\"email\" value={email} />\n              </div>\n            </div>\n          </div>\n        </section>\n      </Layout>\n  )\n}\n\nPage.getInitialProps = async ({ auth }: AuthProps): Promise<Props> => {\n  const res: any = await get(\"/api/restricted\", {\n    headers: {\n      Authorization: auth.authorizationString\n    }\n  });\n\n  let message = \"Something unexpected happened!\";\n\n  if (res.error) {\n    message = res.error;\n  } else if (res.data && res.data.message) {\n    message = res.data.message\n  }\n\n  return { message, auth, };\n};\n\nexport default privateRoute(Page);\n"]},"metadata":{},"sourceType":"module"}